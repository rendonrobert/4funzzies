{"ast":null,"code":"var _jsxFileName = \"/Users/4funzzies/Desktop/Claude/App/frontend/src/components/AudioRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAudioRecorder } from '../hooks/useAudioRecorder';\nimport { identifySong } from '../services/songService';\nimport { RainbowButton } from './RainbowButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onSongRecognized\n}) => {\n  _s();\n  const {\n    startRecording,\n    isRecording,\n    audioBlob,\n    reset\n  } = useAudioRecorder();\n  const handleClick = async () => {\n    if (isRecording) return;\n    try {\n      await startRecording();\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n    }\n  };\n  React.useEffect(() => {\n    const identifyAudio = async () => {\n      if (audioBlob && !isRecording) {\n        try {\n          const song = await identifySong(audioBlob);\n          onSongRecognized(song);\n          reset();\n        } catch (err) {\n          console.error('Failed to identify song:', err);\n          reset();\n        }\n      }\n    };\n    identifyAudio();\n  }, [audioBlob, isRecording, onSongRecognized, reset]);\n  return /*#__PURE__*/_jsxDEV(RainbowButton, {\n    onClick: handleClick,\n    isListening: isRecording\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"YX3Tm92mlVme6vS1Oa+ZrlUITLA=\", false, function () {\n  return [useAudioRecorder];\n});\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useAudioRecorder","identifySong","RainbowButton","jsxDEV","_jsxDEV","AudioRecorder","onSongRecognized","_s","startRecording","isRecording","audioBlob","reset","handleClick","err","console","error","useEffect","identifyAudio","song","onClick","isListening","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/components/AudioRecorder.tsx"],"sourcesContent":["import React from 'react';\nimport { useAudioRecorder } from '../hooks/useAudioRecorder';\nimport { identifySong } from '../services/songService';\nimport { Song } from '../types/song';\nimport { RainbowButton } from './RainbowButton';\n\ninterface AudioRecorderProps {\n  onSongRecognized: (song: Song) => void;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ onSongRecognized }) => {\n  const { startRecording, isRecording, audioBlob, reset } = useAudioRecorder();\n\n  const handleClick = async () => {\n    if (isRecording) return;\n    \n    try {\n      await startRecording();\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n    }\n  };\n\n  React.useEffect(() => {\n    const identifyAudio = async () => {\n      if (audioBlob && !isRecording) {\n        try {\n          const song = await identifySong(audioBlob);\n          onSongRecognized(song);\n          reset();\n        } catch (err) {\n          console.error('Failed to identify song:', err);\n          reset();\n        }\n      }\n    };\n\n    identifyAudio();\n  }, [audioBlob, isRecording, onSongRecognized, reset]);\n\n  return (\n    <RainbowButton onClick={handleClick} isListening={isRecording} />\n  );\n};\n\nexport default AudioRecorder;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM;IAAEC,cAAc;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGX,gBAAgB,CAAC,CAAC;EAE5E,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIH,WAAW,EAAE;IAEjB,IAAI;MACF,MAAMD,cAAc,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAEDd,KAAK,CAACiB,SAAS,CAAC,MAAM;IACpB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIP,SAAS,IAAI,CAACD,WAAW,EAAE;QAC7B,IAAI;UACF,MAAMS,IAAI,GAAG,MAAMjB,YAAY,CAACS,SAAS,CAAC;UAC1CJ,gBAAgB,CAACY,IAAI,CAAC;UACtBP,KAAK,CAAC,CAAC;QACT,CAAC,CAAC,OAAOE,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;UAC9CF,KAAK,CAAC,CAAC;QACT;MACF;IACF,CAAC;IAEDM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,SAAS,EAAED,WAAW,EAAEH,gBAAgB,EAAEK,KAAK,CAAC,CAAC;EAErD,oBACEP,OAAA,CAACF,aAAa;IAACiB,OAAO,EAAEP,WAAY;IAACQ,WAAW,EAAEX;EAAY;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErE,CAAC;AAACjB,EAAA,CAjCIF,aAA2C;EAAA,QACWL,gBAAgB;AAAA;AAAAyB,EAAA,GADtEpB,aAA2C;AAmCjD,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
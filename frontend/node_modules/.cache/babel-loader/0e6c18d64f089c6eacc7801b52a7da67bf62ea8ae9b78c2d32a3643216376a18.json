{"ast":null,"code":"var _jsxFileName = \"/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Logo from './components/Logo/Logo';\nimport SongIdentifier from './components/SongIdentifier/SongIdentifier';\nimport SongInfo from './components/SongInfo/SongInfo';\nimport Lyrics from './components/Lyrics/Lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [songState, setSongState] = useState({\n    isIdentifying: false,\n    song: null,\n    error: null\n  });\n  const handleIdentify = async () => {\n    setSongState(prev => ({\n      ...prev,\n      isIdentifying: true\n    }));\n\n    // Simulate API call - replace with actual API integration\n    setTimeout(() => {\n      const identifiedSong = {\n        title: \"Nettie\",\n        artist: \"Type O Negative\",\n        album: \"Life Is Killing Me\",\n        albumArt: \"/album-art.jpg\",\n        // Replace with actual album art URL\n        lyrics: [\"Nettie, no need to cry\", \"Let me wipe those tear drops from your eyes\", \"Nettie, no need to cry\", \"Let me wipe those tear drops from your eyes\", \"In the dark bathed in Cathode ray blue\", \"Miss Red Hook of 1922\", \"Weeping silently for the pain of others\", \"Every night a tearful rosary\", \"A victim of the curse of empathy\"]\n      };\n      setSongState({\n        isIdentifying: false,\n        song: identifiedSong,\n        error: null\n      });\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-app-bg text-white p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SongIdentifier, {\n          onIdentify: handleIdentify,\n          isIdentifying: songState.isIdentifying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), songState.song && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8 animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n          song: songState.song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Lyrics, {\n          lyrics: songState.song.lyrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VuXTP29YZphAH09j+TDHC6QjUUE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Logo","SongIdentifier","SongInfo","Lyrics","jsxDEV","_jsxDEV","App","_s","songState","setSongState","isIdentifying","song","error","handleIdentify","prev","setTimeout","identifiedSong","title","artist","album","albumArt","lyrics","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onIdentify","_c","$RefreshReg$"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Logo from './components/Logo/Logo';\nimport SongIdentifier from './components/SongIdentifier/SongIdentifier';\nimport SongInfo from './components/SongInfo/SongInfo';\nimport Lyrics from './components/Lyrics/Lyrics';\nimport { Song, SongState } from './types/song';\n\nconst App: React.FC = () => {\n  const [songState, setSongState] = useState<SongState>({\n    isIdentifying: false,\n    song: null,\n    error: null\n  });\n\n  const handleIdentify = async () => {\n    setSongState(prev => ({ ...prev, isIdentifying: true }));\n    \n    // Simulate API call - replace with actual API integration\n    setTimeout(() => {\n      const identifiedSong: Song = {\n        title: \"Nettie\",\n        artist: \"Type O Negative\",\n        album: \"Life Is Killing Me\",\n        albumArt: \"/album-art.jpg\", // Replace with actual album art URL\n        lyrics: [\n          \"Nettie, no need to cry\",\n          \"Let me wipe those tear drops from your eyes\",\n          \"Nettie, no need to cry\",\n          \"Let me wipe those tear drops from your eyes\",\n          \"In the dark bathed in Cathode ray blue\",\n          \"Miss Red Hook of 1922\",\n          \"Weeping silently for the pain of others\",\n          \"Every night a tearful rosary\",\n          \"A victim of the curse of empathy\"\n        ]\n      };\n\n      setSongState({\n        isIdentifying: false,\n        song: identifiedSong,\n        error: null\n      });\n    }, 3000);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-app-bg text-white p-8\">\n      <div className=\"max-w-3xl mx-auto space-y-8\">\n        <div className=\"text-center space-y-8\">\n          <Logo />\n          <SongIdentifier \n            onIdentify={handleIdentify}\n            isIdentifying={songState.isIdentifying}\n          />\n        </div>\n\n        {songState.song && (\n          <div className=\"space-y-8 animate-fade-in\">\n            <SongInfo song={songState.song} />\n            <Lyrics lyrics={songState.song.lyrics} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAY;IACpDW,aAAa,EAAE,KAAK;IACpBC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCJ,YAAY,CAACK,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEJ,aAAa,EAAE;IAAK,CAAC,CAAC,CAAC;;IAExD;IACAK,UAAU,CAAC,MAAM;MACf,MAAMC,cAAoB,GAAG;QAC3BC,KAAK,EAAE,QAAQ;QACfC,MAAM,EAAE,iBAAiB;QACzBC,KAAK,EAAE,oBAAoB;QAC3BC,QAAQ,EAAE,gBAAgB;QAAE;QAC5BC,MAAM,EAAE,CACN,wBAAwB,EACxB,6CAA6C,EAC7C,wBAAwB,EACxB,6CAA6C,EAC7C,wCAAwC,EACxC,uBAAuB,EACvB,yCAAyC,EACzC,8BAA8B,EAC9B,kCAAkC;MAEtC,CAAC;MAEDZ,YAAY,CAAC;QACXC,aAAa,EAAE,KAAK;QACpBC,IAAI,EAAEK,cAAc;QACpBJ,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEP,OAAA;IAAKiB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDlB,OAAA;MAAKiB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1ClB,OAAA;QAAKiB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpClB,OAAA,CAACL,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACRtB,OAAA,CAACJ,cAAc;UACb2B,UAAU,EAAEf,cAAe;UAC3BH,aAAa,EAAEF,SAAS,CAACE;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELnB,SAAS,CAACG,IAAI,iBACbN,OAAA;QAAKiB,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACxClB,OAAA,CAACH,QAAQ;UAACS,IAAI,EAAEH,SAAS,CAACG;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClCtB,OAAA,CAACF,MAAM;UAACkB,MAAM,EAAEb,SAAS,CAACG,IAAI,CAACU;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1DID,GAAa;AAAAuB,EAAA,GAAbvB,GAAa;AA4DnB,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
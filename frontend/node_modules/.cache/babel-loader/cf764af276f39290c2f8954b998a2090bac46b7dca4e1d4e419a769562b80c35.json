{"ast":null,"code":"var _jsxFileName = \"/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TopSection } from './components/TopSection';\nimport { useAudioRecorder } from './hooks/useAudioRecorder';\nimport { identifySong } from './services/songService';\nimport { SongInfo } from './components/SongInfo/SongInfo';\nimport { Lyrics } from './components/Lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [isIdentifying, setIsIdentifying] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    startRecording,\n    stopRecording\n  } = useAudioRecorder();\n  const handleIdentify = async () => {\n    let recorder = null;\n    try {\n      setError(null);\n      setIsIdentifying(true);\n\n      // Start recording and get the MediaRecorder instance\n      recorder = await startRecording();\n\n      // Record for 10 seconds\n      await new Promise(resolve => setTimeout(resolve, 10000));\n      if (!recorder) {\n        throw new Error('Failed to initialize recording');\n      }\n\n      // Stop recording and get the audio blob\n      const audioBlob = await stopRecording(recorder);\n\n      // Send to API for identification\n      const identifiedSong = await identifySong(audioBlob);\n      setSong(identifiedSong);\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to identify song. Please try again.');\n\n      // Clean up if recorder exists but error occurred\n      if (recorder && recorder.state !== 'inactive') {\n        recorder.stream.getTracks().forEach(track => track.stop());\n      }\n    } finally {\n      setIsIdentifying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1f1f1f] p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-[800px] mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(TopSection, {\n        isIdentifying: isIdentifying,\n        onIdentify: handleIdentify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8 animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n          song: song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), song.lyrics && song.lyrics.length > 0 && /*#__PURE__*/_jsxDEV(Lyrics, {\n          lyrics: song.lyrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rHCjrAcz8BOfrGrXI8AjLBNurNo=\", false, function () {\n  return [useAudioRecorder];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TopSection","useAudioRecorder","identifySong","SongInfo","Lyrics","jsxDEV","_jsxDEV","App","_s","song","setSong","isIdentifying","setIsIdentifying","error","setError","startRecording","stopRecording","handleIdentify","recorder","Promise","resolve","setTimeout","Error","audioBlob","identifiedSong","err","console","state","stream","getTracks","forEach","track","stop","className","children","onIdentify","fileName","_jsxFileName","lineNumber","columnNumber","lyrics","length","_c","$RefreshReg$"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TopSection } from './components/TopSection';\nimport { Song } from './types/song';\nimport { useAudioRecorder } from './hooks/useAudioRecorder';\nimport { identifySong } from './services/songService';\nimport { SongInfo } from './components/SongInfo/SongInfo';\nimport { Lyrics } from './components/Lyrics';\n\nconst App: React.FC = () => {\n  const [song, setSong] = useState<Song | null>(null);\n  const [isIdentifying, setIsIdentifying] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { startRecording, stopRecording } = useAudioRecorder();\n\n  const handleIdentify = async () => {\n    let recorder: MediaRecorder | null = null;\n    try {\n      setError(null);\n      setIsIdentifying(true);\n      \n      // Start recording and get the MediaRecorder instance\n      recorder = await startRecording();\n      \n      // Record for 10 seconds\n      await new Promise(resolve => setTimeout(resolve, 10000));\n      \n      if (!recorder) {\n        throw new Error('Failed to initialize recording');\n      }\n\n      // Stop recording and get the audio blob\n      const audioBlob = await stopRecording(recorder);\n\n      // Send to API for identification\n      const identifiedSong = await identifySong(audioBlob);\n      setSong(identifiedSong);\n      \n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to identify song. Please try again.');\n      \n      // Clean up if recorder exists but error occurred\n      if (recorder && recorder.state !== 'inactive') {\n        recorder.stream.getTracks().forEach(track => track.stop());\n      }\n    } finally {\n      setIsIdentifying(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1f1f1f] p-5\">\n      <div className=\"container max-w-[800px] mx-auto\">\n        <TopSection \n          isIdentifying={isIdentifying}\n          onIdentify={handleIdentify}\n        />\n\n        {error && (\n          <div className=\"text-red-500 text-center mb-4\">\n            {error}\n          </div>\n        )}\n\n        {song && (\n          <div className=\"space-y-8 animate-fade-in\">\n            <SongInfo song={song} />\n            {song.lyrics && song.lyrics.length > 0 && (\n              <Lyrics lyrics={song.lyrics} />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
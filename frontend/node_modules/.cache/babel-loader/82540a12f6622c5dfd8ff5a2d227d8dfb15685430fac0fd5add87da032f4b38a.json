{"ast":null,"code":"export const useAudioRecorder = () => {\n  const startRecording = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      // In a real implementation, we would start recording here\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n    }\n  };\n  const stopRecording = async () => {\n    // In a real implementation, we would stop recording and process the audio here\n  };\n  return {\n    startRecording,\n    stopRecording\n  };\n};","map":{"version":3,"names":["useAudioRecorder","startRecording","navigator","mediaDevices","getUserMedia","audio","err","console","error","stopRecording"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/hooks/useAudioRecorder.ts"],"sourcesContent":["export const useAudioRecorder = () => {\n  const startRecording = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      // In a real implementation, we would start recording here\n    } catch (err) {\n      console.error('Failed to start recording:', err);\n    }\n  };\n\n  const stopRecording = async () => {\n    // In a real implementation, we would stop recording and process the audio here\n  };\n\n  return {\n    startRecording,\n    stopRecording\n  };\n};"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC;EAAA,CACD;EAED,OAAO;IACLR,cAAc;IACdQ;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
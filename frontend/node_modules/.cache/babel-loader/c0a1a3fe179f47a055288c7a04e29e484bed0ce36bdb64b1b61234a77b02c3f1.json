{"ast":null,"code":"var _jsxFileName = \"/Users/4funzzies/Desktop/Claude/App1 copy/frontend/src/components/Lyrics.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Lyrics = ({\n  songData\n}) => {\n  if (!songData.lyrics || songData.lyrics.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-body leading-normal text-text-secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No lyrics available for this song.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-body leading-normal text-text-secondary\",\n    children: songData.lyrics.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-[5px]\",\n      children: line\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Lyrics;\nvar _c;\n$RefreshReg$(_c, \"Lyrics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Lyrics","songData","lyrics","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","_c","$RefreshReg$"],"sources":["/Users/4funzzies/Desktop/Claude/App1 copy/frontend/src/components/Lyrics.tsx"],"sourcesContent":["import React from 'react';\nimport { SongData } from '../types/song';\n\ninterface LyricsProps {\n  songData: SongData;\n}\n\nexport const Lyrics: React.FC<LyricsProps> = ({ songData }) => {\n  if (!songData.lyrics || songData.lyrics.length === 0) {\n    return (\n      <div className=\"text-body leading-normal text-text-secondary\">\n        <p>No lyrics available for this song.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-body leading-normal text-text-secondary\">\n      {songData.lyrics.map((line, index) => (\n        <p key={index} className=\"my-[5px]\">{line}</p>\n      ))}\n    </div>\n  );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,OAAO,MAAMC,MAA6B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7D,IAAI,CAACA,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACpD,oBACEJ,OAAA;MAAKK,SAAS,EAAC,8CAA8C;MAAAC,QAAA,eAC3DN,OAAA;QAAAM,QAAA,EAAG;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAEV;EAEA,oBACEV,OAAA;IAAKK,SAAS,EAAC,8CAA8C;IAAAC,QAAA,EAC1DJ,QAAQ,CAACC,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/Bb,OAAA;MAAeK,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAEM;IAAI,GAAjCC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgC,CAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACI,EAAA,GAhBWb,MAA6B;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
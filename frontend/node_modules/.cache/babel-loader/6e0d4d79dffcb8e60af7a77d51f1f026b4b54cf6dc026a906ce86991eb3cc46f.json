{"ast":null,"code":"export async function identifySong(audioBlob) {\n  const formData = new FormData();\n  formData.append('file', audioBlob, 'recording.webm');\n  const response = await fetch('http://localhost:8000/api/identify', {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to identify song');\n  }\n  return response.json();\n}","map":{"version":3,"names":["identifySong","audioBlob","formData","FormData","append","response","fetch","method","body","ok","Error","json"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/services/songService.ts"],"sourcesContent":["import { Song } from '../types/song';\n\nexport async function identifySong(audioBlob: Blob): Promise<Song> {\n  const formData = new FormData();\n  formData.append('file', audioBlob, 'recording.webm');\n\n  const response = await fetch('http://localhost:8000/api/identify', {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to identify song');\n  }\n\n  return response.json();\n}"],"mappings":"AAEA,OAAO,eAAeA,YAAYA,CAACC,SAAe,EAAiB;EACjE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,EAAE,gBAAgB,CAAC;EAEpD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
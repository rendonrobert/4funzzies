{"ast":null,"code":"var _jsxFileName = \"/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TopSection from './components/TopSection';\nimport SongInfo from './components/SongInfo';\nimport Lyrics from './components/Lyrics';\nimport { useAudioRecorder } from './hooks/useAudioRecorder';\nimport { identifySong } from './services/songService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [isIdentifying, setIsIdentifying] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    startRecording,\n    stopRecording,\n    isRecording\n  } = useAudioRecorder();\n  const handleIdentify = async () => {\n    try {\n      setError(null);\n      setIsIdentifying(true);\n      await startRecording();\n\n      // Record for 10 seconds\n      await new Promise(resolve => setTimeout(resolve, 10000));\n      const audioBlob = await stopRecording();\n      const identifiedSong = await identifySong(audioBlob);\n      setSong(identifiedSong);\n    } catch (err) {\n      setError('Failed to identify song. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setIsIdentifying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1f1f1f] p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container max-w-[800px] mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(TopSection, {\n        isIdentifying: isIdentifying,\n        onIdentify: handleIdentify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-center mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8 animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(SongInfo, {\n          song: song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Lyrics, {\n          lyrics: song.lyrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7jqbbegKKfpDfCsPeUc/7jKCdNc=\", false, function () {\n  return [useAudioRecorder];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TopSection","SongInfo","Lyrics","useAudioRecorder","identifySong","jsxDEV","_jsxDEV","App","_s","song","setSong","isIdentifying","setIsIdentifying","error","setError","startRecording","stopRecording","isRecording","handleIdentify","Promise","resolve","setTimeout","audioBlob","identifiedSong","err","console","className","children","onIdentify","fileName","_jsxFileName","lineNumber","columnNumber","lyrics","_c","$RefreshReg$"],"sources":["/Users/4funzzies/Desktop/Claude/App/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TopSection from './components/TopSection';\nimport SongInfo from './components/SongInfo';\nimport Lyrics from './components/Lyrics';\nimport { Song } from './types/song';\nimport { useAudioRecorder } from './hooks/useAudioRecorder';\nimport { identifySong } from './services/songService';\n\nconst App: React.FC = () => {\n  const [song, setSong] = useState<Song | null>(null);\n  const [isIdentifying, setIsIdentifying] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { startRecording, stopRecording, isRecording } = useAudioRecorder();\n\n  const handleIdentify = async () => {\n    try {\n      setError(null);\n      setIsIdentifying(true);\n      await startRecording();\n\n      // Record for 10 seconds\n      await new Promise(resolve => setTimeout(resolve, 10000));\n      const audioBlob = await stopRecording();\n\n      const identifiedSong = await identifySong(audioBlob);\n      setSong(identifiedSong);\n      \n    } catch (err) {\n      setError('Failed to identify song. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setIsIdentifying(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1f1f1f] p-5\">\n      <div className=\"container max-w-[800px] mx-auto\">\n        <TopSection \n          isIdentifying={isIdentifying}\n          onIdentify={handleIdentify}\n        />\n\n        {error && (\n          <div className=\"text-red-500 text-center mb-4\">\n            {error}\n          </div>\n        )}\n\n        {song && (\n          <div className=\"space-y-8 animate-fade-in\">\n            <SongInfo song={song} />\n            <Lyrics lyrics={song.lyrics} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}